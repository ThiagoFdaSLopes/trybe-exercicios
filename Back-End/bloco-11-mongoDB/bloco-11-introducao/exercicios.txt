Exerc√≠cio 1: Retorne o documento com o _id igual a 8.
Resposta: db.bios.find({ _id: 8})

Exerc√≠cio 2: Retorne o documento com o _id igual a 8, mas s√≥ exiba os atributos: _id e name.
Resposta:  db.bios.find({ _id: 8}, {_id: true, name: true})

üöÄ Exerc√≠cio 3: Retorne apenas os atributos name e birth do documento com o _id igual a 8.
Resposta: db.bios.find({ _id: 8}, {_id: false, name: true, birth: true})

Exerc√≠cio 4: Retorne todos os documentos em que o atributo name.first seja igual a John, utilizando o m√©todo pretty().
Resposta: db.bios.find({"name.first": "John"}).pretty()

Exerc√≠cio 5: Retorne os 3 primeiros documentos da cole√ß√£o bios utilizando o m√©todo pretty().
Resposta: db.bios.find().limit(3).pretty();

Exerc√≠cio 6: Retorne 2 documentos da cole√ß√£o bios pulando os 5 primeiros documentos.
Resposta: db.bios.find().limit(2).skip(5)

üöÄ Exerc√≠cio 7: Retorne a quantidade de documentos da cole√ß√£o books.
Resposta: db.books.countDocuments({})

üöÄ Exerc√≠cio 8: Conte quantos livros existem com o status = "PUBLISH".
Resposta: db.books.countDocuments({"status": "PUBLISH"})

üöÄ Exerc√≠cio 9: Exiba os atributos title, isbn e pageCount dos 3 primeiros livros. N√ÉO retorne o atributo _id.
Resposta:  db.books.find({}, {title: 1, isbn: 1, pageCount: 1, _id: 0}).limit(3).pretty()

Exerc√≠cio 10: Pule 5 documentos e exiba os atributos _id, title, authors e status dos livros com o status = "MEAP", limitando-se a 10 documentos.
Resposta: db.books.find({"status": "MEAP"}, {_id: 1, title: 1, authors: 1, status: 1}).skip(5).limit(10).pretty()